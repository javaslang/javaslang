/*
 * Some Gradle tasks we use:
 *
 * - Build: `./gradlew check`
 *   -> test reports: ./build/reports/tests/test/index.html
 *   -> coverage reports: ./build/reports/jacoco/test/html/index.html
 *   -> javadoc: `./build/docs/javadoc`
 *
 * - Release:
 *   -> checking the generated artifacts: `./gradlew publishAllPublicationsToTestRepo` then look into `build/repo`
 *   -> Releasing: `./gradlew release --info`
 *
 * In order to perform a release you need to:
 *   - Add the following properties to ~/.gradle/gradle.properties
 *     ossrhUsername=<username>
 *     ossrhPassword=<password>
 *   - or pass the credentials as command line parameters
 *     ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -DossrhUsername=<my-username> -DossrhPassword=<my-password>
 *
 * And for signing the artifacts:
 *   - Get public key ID `gpg --list-keys --keyid-format SHORT`
 *   - Export key `gpg --keyring secring.gpg --export-secret-keys > ~/.gnupg/secring.gpg`
 *   - Add the following properties to ~/.gradle/gradle.properties
 *          signing.keyId=0ABCDEF
 *          signing.password=password
 *          signing.secretKeyRingFile=/absolute/path/to/.gnupg/secring.gpg
 */

plugins {
    id 'io.vavr.library'
    id 'io.vavr.ammonite'
    id 'io.vavr.publishing'
}

ammonite {
    ammoniteVersion = '2.0.4'
    scalaVersion = '2.13'
}

ext.assertjVersion = '3.19.0'
ext.junitVersion = '4.13'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}
